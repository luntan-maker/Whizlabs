# https://play.whizlabs.com/site/task_details?lab_type=1&task_id=86&quest_id=35
Resources:
  MyDB:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: whizlabs_students_table
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: N
      KeySchema:
        - AttributeName: id
          KeyType: HASH
  MyBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: csvs3dynamo
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .csv
            Function: !Ref MyLamb
  MyLamb:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: csv_s3_dynamodb
      Runtime: python3.7
      Role: !Ref MyRole
      Code:
        ZipFile: |
          import boto3
          s3_client = boto3.client("s3")
          dynamodb = boto3.resource("dynamodb")

          table = dynamodb.Table("whizlabs_students_table")

          def lambda_handler(event, context):
              bucket_name = event['Records'][0]['s3']['bucket']['name']
              s3_file_name = event['Records'][0]['s3']['object']['key']
              resp = s3_client.get_object(Bucket=bucket_name,Key=s3_file_name)
              data = resp['Body'].read().decode("utf-8")
              Students = data.split("\n")
              #print(students)
              for stud in Students:
                  print(stud)
                  stud_data = stud.split(",")
                  # add to dynamodb
                  try:
                      table.put_item(
                          Item = {
                              "id"        : stud_data[0],
                              "name"      : stud_data[1],
                              "Subject"   : stud_data[2]
                          }
                      )
                  except Exception as e:
                      print("End of file")
# https://docs.aws.amazon.com/cli/latest/userguide/cli-services-s3-commands.html
  MyEC2:
    DependsOn: MyBucket
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-087c17d1fe0178315
      InstanceType: t2.micro
      IamInstanceProfile: !Ref MyIP
      SecurityGroupIds:
        - !GetAtt MySG.GroupId
      UserData:
        Fn::Base64: |
          #!/bin/bash
          curl https://play.whizlabs.com/resources/lab_resources/task86/students.csv --output test.csv
          aws s3 mv test.csv s3://csvs3dynamo

  MySG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: MySG
      GroupDescription: MySG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  MyIP:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref MyRole
  MyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AWSS3FullAccess